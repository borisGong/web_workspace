资源：
http://blog.csdn.net/Summer_lover_/article/details/66479576

https://www.cnblogs.com/zhangyongl/p/6123522.html

http://www.cnblogs.com/2050/p/3392803.html

基础方法：

    1. 把margin设为auto：

        具体来说就是把要居中的块状元素元素的margin-left和margin-right都设为auto，此方法只能进行水平的居中，且对浮动元素或绝对定位元素无效。
        
        优点：兼容性好 
        缺点: 需要指定宽度

        注意：应用的是块状元素

    2. 使用 text-align:center:

        这个没什么好说的，只能对图片，按钮，文字等行内元素(display为inline或inline-block等)进行水平居中。但要说明的是在IE6、7这两个奇葩的浏览器中，它是能对任何元素进行水平居中的。

        优点：兼容性好； 
        缺点：需要同时设置子元素(display:inline-block)和父元素(text-align:center)

        注意：应用的内联元素
    
    3. 使用line-height让单行的文字垂直居中

        把文字的line-height设为文字父容器的高度，适用于只有一行文字的情况。

    4. 使用display:table-cell &  vertical-align: middle 实现多行文字水平垂直居中

        对于那些不是表格的元素，我们可以通过display:table-cell 来把它模拟成一个表格单元格，这样就可以利用表格那很方便的居中特性了

        但是，这种方法只能在IE8+、谷歌、火狐等浏览器上使用，IE6、IE7都无效。

特殊技巧：
    1.使用绝对定位来进行居中

        (1) 绝对定位 + (margin-left:-负宽度一半) + (margin-top:负高度一半) + left:50%() + (top:50%)
            
            此法只适用于那些我们已经知道它们的宽度或高度的元素。
            绝对定位进行居中的原理是通过把这个绝对定位元素的left或top的属性设为50%,这个时候元素并不是居中的，而是比居中的位置向右或向左偏了这个元素宽度或高度的一半的距离，所以需要使用一个负的margin-left或margin-top的值来把它拉回到居中的位置，这个负的margin值就取元素宽度或高度的一半。

        (2) 绝对定位 + (margin:auto) + (top:0) + (right:0) + (bottom:0) + (left:0 )
            
            只适用于那些我们已经知道它们的宽度或高度的元素，并且遗憾的是它只支持IE9+,谷歌，火狐等符合w3c标准的现代浏览器
    
        (3) 绝对定位 + (transform: translate(-50%, -50%))
    
            这是最简单的方法，不仅能实现绝对居中同样的效果，也支持联合可变高度方式使用。内容块定义transform: translate(-50%,-50%)必须带上浏览器厂商的前缀，还要加上
             
            遗憾的是IE8不支持,属性需要写浏览器厂商前缀，可能干扰其他transform效果,某些情形下会出现文本或元素边界渲染模糊的现象
            进一步了解transform实现居中的知识可以参考CSS-Tricks的文章《Centering PercentageWidth/Height Elements》
        
        
    2.使用相对定位来实现水平居中

        (1) 相对定位 + float

            这个应该比较少见，主要就用定位来实现浮动块状元素水平居中

            此方法也是关于浮动元素怎么水平居中的解决方法，并且我们不需要知道需要居中的元素的宽度。
            浮动居中的原理是：把浮动元素相对定位到父元素宽度50%的地方，但这个时候元素还不是居中的，而是比居中的那个位置多出了自身一半的宽度，这时就需要他里面的子元素再用一个相对定位，把那多出的自身一半的宽度拉回来，而因为相对定位正是相对于自身来定位的，所以自身一半的宽度只要把left 或 right 设为50%就可以得到了，因而不用知道自身的实际宽度是多少。
            这种使用浮动配合相对定位来居中的方法，优点是不用知道要居中的元素的宽度，即使这个宽度是不断变化的也行；缺点是需要一个多余的元素来包裹要居中的元素。